# vm/Makefile
# 
# This file is Copyright 2003, 2006, 2007, 2009 Dean Hall.
# Copyright 2012 Rice University.
# 
# This file is part of the Owl Embedded Python System and is provided under
# the MIT open-source license. See the LICENSE and COPYING files for details
# about your rights to use, modify, and distribute Owl.

# Builds the Owl VM as an archive
#
# This Makefile is not meant to be invoked directly.
# This Makefile is meant to be invoked by a Makefile in src/platform/<plat>/
# and requires the following environment variables to be exported by the caller:
#   CC OBJCOPY NM CFLAGS AR IPM PM_LIB_FN
#
# The primary function of this makefile is to:
#
#   1. Build pmstdlib_img.c and pmstdlib_nat.c from PMSTDLIB_SOURCES
#   2. Build libpmbm.a from all *.c files

PMIMGCREATOR := ../tools/user/pmImgCreator.py
PMSTDLIB_SOURCES = ../lib/_list.py \
                   ../lib/_dict.py \
                   ../lib/__bi.py \
                   ../lib/__consts.py \
                   ../lib/sys.py \
                   ../lib/math.py \
                   ../lib/_str.py \
                   ../lib/_set.py \
                   ../lib/_thd.py \
                   ../lib/thread.py \
                   ../lib/types.py \
                   ../lib/mem.py \
		   ../lib/profiler.py \
		   ../lib/time.py \
		   ../lib/_tuple.py \
		   ../lib/ffi.py

ifeq ($(IPM),true)
	PMSTDLIB_SOURCES += ../lib/ipm.py
endif


SOURCE_IMG := pmstdlib_img.c
SOURCE_NAT := pmstdlib_nat.c

ARFLAGS = rcs
SOURCES = $(wildcard *.c) $(SOURCE_IMG) $(SOURCE_NAT)
OBJECTS = $(SOURCES:.c=.o)
INDENT := $(call pathsearch,indent)

PYTHON ?= python

# Fix flags from WinARM/WinAVR Makefile
# If ALL_CFLAGS is defined, overwrite CFLAGS
ifneq ($(ALL_CFLAGS),)
    CFLAGS = $(ALL_CFLAGS)
	IPM=true
endif
# If RM does not exist, define it as REMOVE
ifeq ($(RM),)
    RM = $(REMOVE)
endif


.PHONY: all size indent clean
# Must delete/rebuild these intermediate files because they depend on the platform
#.INTERMEDIATE: $(SOURCE_IMG) $(SOURCE_NAT)

# Default action is to build the archive from object files
all : $(SOURCE_IMG) $(SOURCE_NAT) $(PM_LIB_FN)

# Added to clean up output, used to use default rules
%.o: %.c
	@echo "  GCC   ${<}"
	@$(CC) $(CPPFLAGS) $(CFLAGS) -c -o $@ $<

# The archive is generated by placing object files inside it
$(PM_LIB_FN) : $(PM_LIB_FN)($(OBJECTS))

# Added to clean up output, used to use default rules
$(PM_LIB_FN)(%.o): %.o
	@echo "  AR    ${<}"
	@$(AR) $(ARFLAGS) $@ $<

# Build the standard library into an image file and native function file
$(SOURCE_IMG) $(SOURCE_NAT) : $(PMSTDLIB_SOURCES)
	@$(PYTHON) $(PMIMGCREATOR) -c -s --memspace=flash -o $(SOURCE_IMG) --native-file=$(SOURCE_NAT) $(PMSTDLIB_SOURCES)

size : $(PM_LIB_FN)
	@$(SIZE) $(PM_LIB_FN)

# Remove files made by default make
clean :
	@$(RM) $(PM_LIB_FN) $(SOURCE_IMG) $(SOURCE_NAT)
	@$(RM) $(OBJECTS)
